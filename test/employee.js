// Generated by CoffeeScript 1.10.0
(function() {
  var Employee, Promise, SSE, chat, count, log,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  if (typeof Promise === 'undefined') {
    Promise = require('avs-easyrpc').Promise;
  }

  log = require('avs-easyrpc').log;

  SSE = require('avs-easyrpc').SSE;

  chat = [];

  count = 0;

  exports.Employee = Employee = (function(superClass) {
    extend(Employee, superClass);

    function Employee() {
      return Employee.__super__.constructor.apply(this, arguments);
    }

    Employee.prototype._remoteReady = function(remote) {
      this.remote = remote;
      this.remote.setMethods(['echo']);
      return 'OK';
    };

    Employee.prototype.speak = function(msg) {
      var member;
      for (member in chat) {
        if (chat[member].__sse.closed) {
          delete chat[member];
        }
      }
      if (!this.alias) {
        chat[this.alias = "joe-" + (++count)] = this.remote;
      }
      for (member in chat) {
        chat[member].echo(this.alias, msg);
      }
      return 'OK';
    };

    Employee.prototype.getProfile = function(name) {
      return new Promise(function(resolve, reject) {
        return setTimeout((function() {
          return resolve({
            age: 32,
            email: 'john@acme.com'
          });
        }), 3000);
      });
    };

    return Employee;

  })(SSE);

}).call(this);
