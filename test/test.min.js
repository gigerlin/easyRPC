(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
exports.Remote = require('./js/easyRpc');
exports.Server = require('./js/rpc');

},{"./js/easyRpc":2,"./js/rpc":6}],2:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0

/*
  @author Gilles Gerlinger
  Copyright 2016. All rights reserved.
 */

(function() {
  var Remote, fetch, log, send;

  log = require('./log');

  if (typeof window === 'object') {
    fetch = window.fetch || require('./fetch');
  }

  module.exports = Remote = (function() {
    function Remote(options) {
      var ctx, method, _fn, _i, _len, _ref;
      ctx = {
        count: 0,
        uid: Math.random().toString().substring(2, 10),
        request: "" + (options.url || location.origin) + "/" + options["class"]
      };
      _ref = options.methods;
      _fn = (function(_this) {
        return function(method) {
          return _this[method] = function() {
            return send(ctx.request, {
              method: method,
              args: [].slice.call(arguments),
              id: "" + ctx.uid + "-" + (++ctx.count)
            });
          };
        };
      })(this);
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        method = _ref[_i];
        _fn(method);
      }
    }

    return Remote;

  })();

  send = function(request, msg) {
    log("" + msg.id + ": out", msg);
    return new Promise(function(resolve, reject) {
      return fetch(request, {
        headers: {
          'Content-Type': 'application/json; charset=utf-8'
        },
        method: 'post',
        body: JSON.stringify(msg)
      })["catch"](function(err) {
        log("" + msg.id + ": network error " + err);
        return reject(err);
      }).then(function(response) {
        if (response) {
          return response.json();
        }
      }).then(function(rep) {
        if (rep) {
          log("" + msg.id + ": in", rep);
          if (rep.err) {
            return reject(rep.err);
          } else {
            return resolve(rep.rep);
          }
        }
      });
    });
  };

}).call(this);

},{"./fetch":3,"./log":4}],3:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0

/*
  @author Gilles Gerlinger
  Copyright 2015. All rights reserved.
 */

(function() {
  var Response, fetch;

  Response = (function() {
    function Response(data) {
      this.data = data;
    }

    Response.prototype.json = function() {
      return JSON.parse(this.data);
    };

    return Response;

  })();

  module.exports = fetch = function(uri, options) {
    console.log('using own fetch');
    return new Promise(function(resolve, reject) {
      var xhr;
      xhr = new XMLHttpRequest();
      xhr.open(options.method, uri, true);
      xhr.setRequestHeader('Content-type', 'application/json; charset=utf-8');
      xhr.send(options.body || null);
      xhr.onload = function() {
        console.log('got', xhr.response);
        return resolve(new Response(xhr.response));
      };
      return xhr.onerror = function() {
        return reject("xhr error: " + xhr.statusText);
      };
    });
  };

}).call(this);

},{}],4:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0

/*
  @author Gilles Gerlinger
  Copyright 2016. All rights reserved.
 */

(function() {
  var __slice = [].slice;

  module.exports = function() {
    var text;
    text = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return console.log.apply(console, [new Date().toISOString().replace('T', ' ').slice(0, 19), 'rpc'].concat(__slice.call(text)));
  };

}).call(this);

},{}],5:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  var Remote, remote;

  Remote = require('avs-easyrpc').Remote;

  remote = new Remote({
    "class": 'Employee',
    methods: ['getProfile', 'publish']
  });

  remote.getProfile('john').then(function(rep) {
    return console.log(rep);
  })["catch"](function(err) {
    return console.log(err);
  });

  remote.publish().then(function(rep) {
    return console.log(rep);
  })["catch"](function(err) {
    return console.log(err);
  });

}).call(this);

},{"avs-easyrpc":1}],6:[function(require,module,exports){

},{}]},{},[5]);
